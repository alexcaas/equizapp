<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
  <!-- The following config is an example config for postgresql -->
  <persistence-unit name="postgresql" transaction-type="RESOURCE_LOCAL">
    <provider>org.hibernate.ejb.HibernatePersistence</provider>
    <non-jta-data-source>Ujian</non-jta-data-source>
    <class>models.Tuser</class>
    <class>models.Tusergroup</class>
    <class>models.Tgroup</class>
    <class>models.Titem</class>
    <class>models.Tanswer</class>
    <validation-mode>NONE</validation-mode>
    <properties>
      <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
      <property name="hibernate.show_sql" value="true"/>
      <property name="hibernate.format_sql" value="true"/>
      <!-- Connection Pooling settings -->
      <property name="hibernate.connection.provider_class" value="org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider"/>
      <property name="hibernate.c3p0.max_size" value="100"/>
      <property name="hibernate.c3p0.min_size" value="0"/>
      <property name="hibernate.c3p0.acquire_increment" value="1"/>
      <property name="hibernate.c3p0.idle_test_period" value="300"/>
      <property name="hibernate.c3p0.max_statements" value="0"/>
      <property name="hibernate.c3p0.timeout" value="100"/>
    </properties>
  </persistence-unit>
  <!-- And another persistence unit that you can set and use on your production servers.
            Quite handy because in production you may want to tune the connection pooling and so on. -->
</persistence>


